=begin
Класс Train (Поезд):
[1] 	Имеет номер (num) (произвольная строка) и 
      тип (грузовой (type="Грузовой"), 
      пассажирский(type="Пассажирский")) 
      и количество вагонов (len). 
      Эти данные указываются при создании экземпляра класса
[2] 	Может набирать скорость (speed)
[3] 	Может возвращать текущую скорость
[4] 	Может тормозить (сбрасывать скорость до нуля)
[5] 	Может возвращать количество вагонов
[6] 	Может прицеплять/отцеплять вагоны (по одному вагону за операцию, 
      метод просто увеличивает или уменьшает количество вагонов). 
      Прицепка/отцепка вагонов может осуществляться только если поезд 
      не движется.
[7] 	Может принимать маршрут следования (объект класса Route). 
[8] 	При назначении маршрута поезду, поезд автоматически помещается
      на первую станцию в маршруте (реализовано в классе Route).
[9] 	Может перемещаться между станциями, указанными в маршруте. 
      Перемещение возможно вперед и назад, но только на 1 станцию за раз.
[10]	Возвращать предыдущую станцию, текущую, следующую, на основе маршрута
=end


require_relative 'Route'

class Train 

  def initialize(num,type,len) # [п.1]
    @num   = num  # номер поезда
    @type  = type # тип поезда
    @len   = len  # длина поезда
    @speed = 0    # скорость поезда
  end

  def get_params
      return { :num => @num, :type => @type, :len => @len}
  end  
  
  # установить скорость
  def set_speed(speed)
    @speed = speed
    puts "Установили скорость #{speed}"
  end  

  # остановить поезд
  def stop 
    @speed = 0
    puts "Останавливаем поезд!"
  end  

  # назначить маршрут поезду
  def set_route(route) 
    @route = route
  end   

  # взять текущую станцию на маршруте
  def get_current_sta_name
      return @route.get_current_sta_name
  end  

  # показать текущую станцию на маршруте
  def show_current_sta_name
    str = get_current_sta_name
    puts "Текущая станция = <#{str}>"
  end  

  # [п.6] добавить вагон
  def append_coach 
    if @speed == 0
       @len += 1    
       puts "Добавлен 1 вагон. Теперь их #{@len}"
    else
      puts "Пытаемся добавить вагон на ходу."
      puts "На ходу добавлять вагоны нельзя!!!" 
    end  
  end  
  
  #показать маршрут
  def show_route 
      @route.show_route
  end  

   #следующая станция
  def next_station
    s = @route.next  
    if s[:status] == "stop"
       puts "Вы уже на конечном пункте <#{s[:sta_name]}>!"
    else   
       puts "Приехали на станцию <#{s[:sta_name]}>"
    end   
  end  

  #предыдущая станция
  def prev_station  
    s = @route.prev
    if s[:status] == "stop"
      puts "Вы уже на начальном пункте <#{s[:sta_name]}>!"
    else   
      puts "Приехали на станцию <#{s[:sta_name]}>"
    end     
  end  

end  